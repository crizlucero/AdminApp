using Foundation; using UIKit; using WorklabsMx.iOS.Helpers; //using PerpetualEngine.Storage; using WorklabsMx.Controllers; using Plugin.KeyChain.Abstractions;  namespace WorklabsMx.iOS {     // The UIApplicationDelegate for the application. This class is responsible for launching the     // User Interface of the application, as well as listening (and optionally responding) to application events from iOS.     [Register("AppDelegate")]     public class AppDelegate : UIApplicationDelegate     {        // class-level declarations         public override UIWindow Window         {             get;             set;         }          public override bool FinishedLaunching(UIApplication application, NSDictionary launchOptions)         {             App.Initialize();               /*SimpleStorage.EditGroup = (string groupName) => {                 return new iOSSimpleStorage(groupName);             };*/                         //var localStorage = SimpleStorage.EditGroup("Login");              var result = false;              if (InternetConectionHelper.VerificarConexion())              {                 var configuracionCorreo = new ConfigurationsController().GetConfiguraciones("REGEX Y LONGITUD DE CORREO ELECTRONICO DEL USUARIO");                 var configuracionPassword = new ConfigurationsController().GetConfiguraciones("REGEX Y LONGITUD DE CONTRASEÑA DEL USUARIO");                  result = KeyChainHelper.SetKey("EmailRegex", configuracionCorreo.Parametro_Varchar_1);                 result = KeyChainHelper.SetKey("LongitudEmail", configuracionCorreo.Parametro_Varchar_2);                 result = KeyChainHelper.SetKey("PasswordRegex", configuracionPassword.Parametro_Varchar_1);                 result = KeyChainHelper.SetKey("LongitudPassword", configuracionPassword.Parametro_Varchar_2);                 /*localStorage.Put("EmailRegex", configuracionCorreo.Parametro_Varchar_1);                 localStorage.Put("LongitudEmail", configuracionCorreo.Parametro_Varchar_2);                localStorage.Put("PasswordRegex", configuracionPassword.Parametro_Varchar_1);                 localStorage.Put("LongitudPassword", configuracionPassword.Parametro_Varchar_2);*/             } else {                 result = KeyChainHelper.SetKey("EmailRegex", "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]");                 result = KeyChainHelper.SetKey("PasswordRegex", "[a-zA-Z0-9_-]{8}");                 result = KeyChainHelper.SetKey("LongitudEmail", "150");                 result = KeyChainHelper.SetKey("LongitudPassword", "8");                  /*localStorage.Put("EmailRegex", "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]");                localStorage.Put("PasswordRegex", "[a-zA-Z0-9_-]{8}");                 localStorage.Put("LongitudEmail", "150");                 localStorage.Put("LongitudPassword", "8");*/             }              // Select first UIViewController.             if (!string.IsNullOrEmpty(KeyChainHelper.GetKey("Usuario_Id")) && !string.IsNullOrEmpty(KeyChainHelper.GetKey("Usuario_Tipo")) && !string.IsNullOrEmpty(KeyChainHelper.GetKey("Empresa_Id")))             {                     Window.RootViewController = UIStoryboard.FromName("Main", null)                         .InstantiateViewController("splitViewController");             }             else             {                 var controller = UIStoryboard.FromName("Main", null).InstantiateViewController("LoginViewController");                 controller.Title = "Iniciar Sesión";                 Window.RootViewController = controller;             }             return true;         }          public override void OnResignActivation(UIApplication application)         {             // Invoked when the application is about to move from active to inactive state.             // This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message)              // or when the user quits the application and it begins the transition to the background state.             // Games should use this method to pause the game.         }          public override void DidEnterBackground(UIApplication application)         {             // Use this method to release shared resources, save user data, invalidate timers and store the application state.             // If your application supports background exection this method is called instead of WillTerminate when the user quits.         }          public override void WillEnterForeground(UIApplication application)         {             // Called as part of the transiton from background to active state.             // Here you can undo many of the changes made on entering the background.         }          public override void OnActivated(UIApplication application)         {             // Restart any tasks that were paused (or not yet started) while the application was inactive.              // If the application was previously in the background, optionally refresh the user interface.         }          public override void WillTerminate(UIApplication application)         {             // Called when the application is about to terminate. Save data, if needed. See also DidEnterBackground.         }     } }  